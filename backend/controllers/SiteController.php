<?php
namespace backend\controllers;

use backend\models\SongSearch;
use common\models\AdminToken;
use common\models\Feedback;
use common\models\User;
use Yii;
use yii\data\ActiveDataProvider;
use yii\helpers\Url;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use yii\web\ErrorAction;

/**
 * Site controller
 */
class SiteController extends Controller
{

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if(\Yii::$app->session->get('adminTgAuthToken', false) === false){
            \Yii::$app->session->set('adminTgAuthToken', $this->getUniqueHash());
        }
    }

    protected function getUniqueHash(){
        $hash = \Yii::$app->security->generateRandomString(60);

        if(AdminToken::findOne(['token' => $hash])){
            $hash = $this->getUniqueHash();
        }

        return $hash;
    }

    public function beforeAction($action) {
        $state = parent::beforeAction($action);
        if($action->id === 'error'){
            $this->layout ='clean';
        }

        return $state;
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login', 'error', 'is-guest'],
                        'allow' => true,
                    ],
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => ErrorAction::class,
            ],
        ];
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionUsers(){
        $dataProvider = new ActiveDataProvider([
            'query' =>  User::find()
        ]);

        return $this->render('users', [
            'dataProvider'  =>  $dataProvider
        ]);
    }

    public function actionTracks(){
        $searchModel = new SongSearch;
        $searchModel->load(\Yii::$app->request->get());

        $dataProvider = new ActiveDataProvider([
            'query' =>  $searchModel->getResults()->with('user'),
            'sort'  =>  [
                'defaultOrder'  =>  [
                    'id'    =>  SORT_DESC
                ]
            ]
        ]);

        Url::remember(\Yii::$app->request->url, 'tracks');

        return $this->render('tracks', [
            'dataProvider'  =>  $dataProvider,
            'searchModel'   =>  $searchModel
        ]);
    }

    public function actionGenres(){

    }

    public function actionAlbums(){

    }

    public function actionFeedback(){
        $dataProvider = new ActiveDataProvider([
            'query' =>  Feedback::find(),
            'sort'  =>  [
                'defaultOrder'  =>  [
                    'created'   =>  SORT_DESC
                ]
            ]
        ]);

        return $this->render('feedback', [
            'dataProvider'  =>  $dataProvider
        ]);
    }

    /**
     * Login action.
     *
     * @return string
     * @throws \yii\base\InvalidParamException
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $this->layout = 'clean';
        return $this->render('login');
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        $authToken = \Yii::$app->session->get('adminTgAuthToken', false);

        if(Yii::$app->user->logout()){
            AdminToken::deleteAll(['token' => $authToken]);
            \Yii::$app->session->remove('adminTgAuthToken');
        }

        return $this->goHome();
    }

    /**
     * @return string
     */
    public function actionIsGuest(){
        \Yii::$app->response->format = 'json';

        return \Yii::$app->user->isGuest;
    }

    public function actionError(){

    }
}
