<?php
namespace backend\controllers;

use backend\models\SongSearch;
use common\models\AdminToken;
use common\models\User;
use Yii;
use yii\data\ActiveDataProvider;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;

/**
 * Site controller
 */
class SiteController extends Controller
{

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        if(\Yii::$app->session->get('adminTgAuthToken', false) == false){
            \Yii::$app->session->set('adminTgAuthToken', \Yii::$app->security->generateRandomString(60));
        }

        \Yii::trace(\Yii::$app->session->get('adminTgAuthToken', false));

    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                'rules' => [
                    [
                        'actions' => ['login', 'error'],
                        'allow' => true,
                    ],
                    [
                        'actions' => ['logout', 'index'],
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                ],
            ],
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }

    public function actionIndex()
    {
        return $this->render('index');
    }

    public function actionUsers(){
        $dataProvider = new ActiveDataProvider([
            'query' =>  User::find()
        ]);

        return $this->render('users', [
            'dataProvider'  =>  $dataProvider
        ]);
    }

    public function actionTracks(){
        $searchModel = new SongSearch;
        $searchModel->load(\Yii::$app->request->get());

        $dataProvider = new ActiveDataProvider([
            'query' =>  $searchModel->getResults()->with('user'),
            'sort'  =>  [
                'defaultOrder'  =>  [
                    'id'    =>  SORT_DESC
                ]
            ]
        ]);

        return $this->render('tracks', [
            'dataProvider'  =>  $dataProvider,
            'searchModel'   =>  $searchModel
        ]);
    }

    public function actionGenres(){

    }

    public function actionAlbums(){

    }

    public function actionFeedbacks(){

    }

    /**
     * Login action.
     *
     * @return string
     */
    public function actionLogin()
    {
        if (!Yii::$app->user->isGuest) {
            return $this->goHome();
        }

        $this->layout = 'clean';
        return $this->render('login');
    }

    /**
     * Logout action.
     *
     * @return string
     */
    public function actionLogout()
    {
        $authToken = \Yii::$app->session->get('adminTgAuthToken', false);

        if(Yii::$app->user->logout()){
            AdminToken::deleteAll(['token' => $authToken]);
            \Yii::$app->session->remove('adminTgAuthToken');
        }

        return $this->goHome();
    }
}
